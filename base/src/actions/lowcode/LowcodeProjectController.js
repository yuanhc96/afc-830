// This file is automatically generated

// 低开项目管理

import { LowcodeProjectController } from '@controller'
export default {
  actions: {
    [LowcodeProjectController.countResources.method]: {
      summary: '统计当前应用内各资源类型的数量',
      method: 'get',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/projects/actions/count-resources/${payload.mode}`,
    },
    [LowcodeProjectController.exportArtifact.method]: {
      summary: '导出介质',
      method: 'get',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/projects/actions/export-artifact`,
    },
    [LowcodeProjectController.exportContributionOrResource.method]: {
      summary: '导出构建包(支持构建包和资源选择导出)',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/projects/actions/export-contributions`,
    },
    [LowcodeProjectController.exportProject.method]: {
      summary: '导出项目',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/projects/actions/export`,
    },
    [LowcodeProjectController.exportSdoStaticSource.method]: {
      summary: '导出SDO静态代码',
      method: 'get',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/projects/actions/export-sdo-static-source`,
    },
    [LowcodeProjectController.exportSource.method]: {
      summary: '导出源码',
      method: 'get',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/projects/actions/export-source`,
    },
    [LowcodeProjectController.getNewerResourceTree.method]: {
      summary: '获取更加新的低开项目资源树信息',
      method: 'get',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/projects/actions/newer-resource-tree`,
    },
    [LowcodeProjectController.importContributionOrResource.method]: {
      summary: '导入构建包',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/projects/actions/import-contributions`,
    },
    [LowcodeProjectController.importProject.method]: {
      summary: '导入项目(先调用解析接口解析数据再导入)',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/projects/actions/import`,
    },
    [LowcodeProjectController.importProjectForFile.method]: {
      summary: '导入项目(根据上传文件导入)',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/projects/actions/import-from-file`,
    },
    [LowcodeProjectController.importProjectWithTemplate.method]: {
      summary: '导入项目(根据应用模板选择导入)',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/projects/actions/import-templates`,
    },
    [LowcodeProjectController.importReset.method]: {
      summary: '回退应用数据到上一个导入前',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/projects/actions/reset`,
    },
    [LowcodeProjectController.importSource.method]: {
      summary: '导入源码',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/projects/actions/import-source`,
    },
    [LowcodeProjectController.index.method]: {
      summary: '低开项目（资源）生成索引',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/projects/actions/index`,
    },
    [LowcodeProjectController.load.method]: {
      summary: '加载低开项目（资源）',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/projects/actions/load`,
    },
    [LowcodeProjectController.parseImportProject.method]: {
      summary: '根据上传文件解析上传数据',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/projects/actions/parse`,
    },
    [LowcodeProjectController.queryAppsByCriteria.method]: {
      summary: '分页查询应用列表',
      method: 'get',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/projects`,
    },
    [LowcodeProjectController.queryProjectsFunctionsByObjInstId.method]: {
      summary: '返回低开项目功能码',
      method: 'get',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/projects/functions`,
    },
    [LowcodeProjectController.showForce.method]: {
      summary: '导入构建包校验：存在相同构建包是否强制导入',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/projects/actions/force/show`,
    },
    [LowcodeProjectController.showReset.method]: {
      summary: '是否显示回退',
      method: 'get',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/projects/actions/reset/show`,
    },
  },
}
