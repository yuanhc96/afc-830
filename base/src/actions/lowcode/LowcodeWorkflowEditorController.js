// This file is automatically generated

// 低开工作流在线编辑器管理

import { LowcodeWorkflowEditorController } from '@controller'
export default {
  actions: {
    [LowcodeWorkflowEditorController.ExtendCallBack.method]: {
      summary: '回填活动扩展信息',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/actions/extend-callback`,
    },
    [LowcodeWorkflowEditorController.cloneProcess.method]: {
      summary: '克隆低开流程',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/process/clone`,
    },
    [LowcodeWorkflowEditorController.extractionProcess.method]: {
      summary: '提取流程',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/extraction/process`,
    },
    [LowcodeWorkflowEditorController.getActivityExtendInfo.method]: {
      summary: '获取活动扩展信息',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/activity-extend`,
    },
    [LowcodeWorkflowEditorController.getBackConfigByDefID.method]: {
      summary: '根据流程定义id和活动定义id查询活动节点撤回配置',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/find-draw-back`,
    },
    [LowcodeWorkflowEditorController.getBizOptByID.method]: {
      summary: '根据ID获取业务操作',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/biz-operation`,
    },
    [LowcodeWorkflowEditorController.getBizOptsByNames.method]: {
      summary: '根据名称获取业务操作列表',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/biz-operations`,
    },
    [LowcodeWorkflowEditorController.getBizVarsByNames.method]: {
      summary: '根据名称获取业务变量列表',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/biz-vars-by-names`,
    },
    [LowcodeWorkflowEditorController.getBizVarsByProcessDefID.method]: {
      summary: '根据流程定义获取业务变量列表',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/biz-vars-by-process`,
    },
    [LowcodeWorkflowEditorController.getBranchRulesByDefID.method]: {
      summary: '根据流程定义获取分支规则列表',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/branch-rules`,
    },
    [LowcodeWorkflowEditorController.getBusiPackInfoByBusiCatalogID.method]: {
      summary: '获取Business Pack信息',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/business-pack-info`,
    },
    [LowcodeWorkflowEditorController.getCalendars.method]: {
      summary: '获取日历列表',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/calendars`,
    },
    [LowcodeWorkflowEditorController.getCatlogById.method]: {
      summary: '获取业务目录信息',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/catalog`,
    },
    [LowcodeWorkflowEditorController.getChildParticipants.method]: {
      summary: '获取子参与者',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/child-partipants`,
    },
    [LowcodeWorkflowEditorController.getFormTemplateList.method]: {
      summary: '获取表单',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/form-template`,
    },
    [LowcodeWorkflowEditorController.getMessageChannel.method]: {
      summary: '获取消息通道枚举',
      method: 'get',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/message-channel`,
    },
    [LowcodeWorkflowEditorController.getParticipantRulesByDefID.method]: {
      summary: '获取参与者规则列表',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/participant-rules`,
    },
    [LowcodeWorkflowEditorController.getParticipantTypes.method]: {
      summary: '获取参与者类型列表',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/participant-types`,
    },
    [LowcodeWorkflowEditorController.getProcessExtendInfo.method]: {
      summary: '获取流程中所有扩展信息',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/process-extend-info`,
    },
    [LowcodeWorkflowEditorController.getProcessStringByDefId.method]: {
      summary: '获取流程内容',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/process-string`,
    },
    [LowcodeWorkflowEditorController.getProcessStringByDefIdToJson.method]: {
      summary: '获取流程内容(Json)',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/process-json`,
    },
    [LowcodeWorkflowEditorController.getProcessesByDefID.method]: {
      summary: '根据父流程ID获取子流程列表',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/processes`,
    },
    [LowcodeWorkflowEditorController.getResourceByCatlogId.method]: {
      summary: '根据业务目录ID获取业务资源',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/resource`,
    },
    [LowcodeWorkflowEditorController.getRuleByID.method]: {
      summary: '获取规则',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/rule`,
    },
    [LowcodeWorkflowEditorController.getSubNodesByCatlogIdWithPerm.method]: {
      summary: '根据业务目录ID获取子业务目录',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/sub-catalogs`,
    },
    [LowcodeWorkflowEditorController.getUseableBizResourcesByCurCID.method]: {
      summary: '根据业务目录ID获取子业务目录',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/useable-resources`,
    },
    [LowcodeWorkflowEditorController.hasBizFormCustomizeModule.method]: {
      summary: '是否有表单自定义模块',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/has-form-customize-module`,
    },
    [LowcodeWorkflowEditorController.processDefinitionDetail.method]: {
      summary: '通过流程定义名称和版本获取流程详请',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/process/define`,
    },
    [LowcodeWorkflowEditorController.processDefinitionDetailWithJson.method]: {
      summary: '通过流程定义名称和版本获取流程详请(JSON格式)',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/process/define/json`,
    },
    [LowcodeWorkflowEditorController.publishProcess.method]: {
      summary: '发布某流程定义模板的指定版本',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/publish-process`,
    },
    [LowcodeWorkflowEditorController.queryCalendarDetailsByMonth.method]: {
      summary: '根据月份获取日历详情',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/calendar-details-month`,
    },
    [LowcodeWorkflowEditorController.queryMessageTemplateWithPage.method]: {
      summary: '分页查询模板信息',
      method: 'get',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/pageTemplate`,
    },
    [LowcodeWorkflowEditorController.queryProcessChNameByName.method]: {
      summary: '根据月份获取日历详情',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/process-chname`,
    },
    [LowcodeWorkflowEditorController.queryProcessesByName.method]: {
      summary: '根据流程定义名流程定义列表',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/process-defines`,
    },
    [LowcodeWorkflowEditorController.saveBizOperation.method]: {
      summary: '保存业务操作',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/actions/biz-operation`,
    },
    [LowcodeWorkflowEditorController.saveBizResourceBatch.method]: {
      summary: '保存业务操作',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/actions/biz-resource-batch`,
    },
    [LowcodeWorkflowEditorController.saveBizVar.method]: {
      summary: '保存业务变量',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/actions/biz-var`,
    },
    [LowcodeWorkflowEditorController.saveCalendarDetails.method]: {
      summary: '保存日历详情列表',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/actions/calendar-details`,
    },
    [LowcodeWorkflowEditorController.saveHumanTask.method]: {
      summary: '保存人工任务',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/actions/human-task`,
    },
    [LowcodeWorkflowEditorController.saveOrUpdateProcessBack.method]: {
      summary: '保存或修改活动撤回配置',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/draw-back`,
    },
    [LowcodeWorkflowEditorController.saveRule.method]: {
      summary: '保存业务规则',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/actions/rule`,
    },
    [LowcodeWorkflowEditorController.simulatePublishedProcess.method]: {
      summary: '流程仿真接口',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/process/simulate`,
    },
    [LowcodeWorkflowEditorController.submitProcessForJson.method]: {
      summary: '提交业务流程',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/actions/submit-process`,
    },
    [LowcodeWorkflowEditorController.unpublishProcess.method]: {
      summary: '取消某流程定义的发布',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/unpublish-process`,
    },
    [LowcodeWorkflowEditorController.updateProcessChName.method]: {
      summary: '修改流程定义中文名称',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/update-process-name`,
    },
    [LowcodeWorkflowEditorController.validateProcess.method]: {
      summary: '校验流程内容',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/actions/validate-process`,
    },
    [LowcodeWorkflowEditorController.validateRule.method]: {
      summary: '校验流程内容',
      method: 'post',
      apiPrefix: true,
      url: (payload) => `/api/lowcode/workflow-editors/actions/validate-rule`,
    },
  },
}
