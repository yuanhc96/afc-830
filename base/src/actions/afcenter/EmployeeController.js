// This file is automatically generated

// 员工管理

import { EmployeeController } from '@controller'
export default {
  actions: {
    [EmployeeController.create.method]: {
      summary: '新增员工',
      method: 'post',
      apiPrefix: '/afc',
      url: (payload) => `/api/afc/employees`,
    },
    [EmployeeController.createRolesInEmployee.method]: {
      summary: '员工添加角色',
      method: 'put',
      apiPrefix: '/afc',
      url: (payload) => `/api/afc/employees/${payload.employeeId}/roles`,
    },
    [EmployeeController.deleteRolesInEmployee.method]: {
      summary: '员工移除角色',
      method: 'delete',
      apiPrefix: '/afc',
      url: (payload) => `/api/afc/employees/${payload.employeeId}/roles`,
    },
    [EmployeeController.disableEmployee.method]: {
      summary: '员工禁用',
      method: 'put',
      apiPrefix: '/afc',
      url: (payload) => `/api/afc/employees/${payload.employeeId}/disable`,
    },
    [EmployeeController.enableEmployee.method]: {
      summary: '员工可用',
      method: 'put',
      apiPrefix: '/afc',
      url: (payload) => `/api/afc/employees/${payload.employeeId}/enable`,
    },
    [EmployeeController.findEmployeeById.method]: {
      summary: '根据ID查询员工信息',
      method: 'get',
      apiPrefix: '/afc',
      url: (payload) => `/api/afc/employees/${payload.id}`,
    },
    [EmployeeController.findEmployeeIsExist.method]: {
      summary: '校验是否存在员工code，true存在',
      method: 'get',
      apiPrefix: '/afc',
      url: (payload) => `/api/afc/employees/exist`,
    },
    [EmployeeController.getOrgFullPathByEmployeeCode.method]: {
      summary: '查询员工的机构路径',
      method: 'get',
      apiPrefix: '/afc',
      url: (payload) => `/api/afc/employees/full-path`,
    },
    [EmployeeController.queryEmployeeBySecretLevelAndFilter.method]: {
      summary: '通过保密级别过滤查询员工信息',
      method: 'get',
      apiPrefix: '/afc',
      url: (payload) => `/api/afc/employees/secret-level`,
    },
    [EmployeeController.queryEmployeesByIds.method]: {
      summary: '根据员工id获取员工集合',
      method: 'get',
      apiPrefix: '/afc',
      url: (payload) => `/api/afc/employees/array`,
    },
    [EmployeeController.queryEmployeesByIdsForMobile.method]: {
      summary: '移动端获取员工集合',
      method: 'get',
      apiPrefix: '/afc',
      url: (payload) => `/api/afc/employees/array/mobile`,
    },
    [EmployeeController.queryEmployeesByRoleCode.method]: {
      summary: '根据角色查询角色下的员工',
      method: 'get',
      apiPrefix: '/afc',
      url: (payload) => `/api/afc/employees/role/employees`,
    },
    [EmployeeController.queryEmployeesByTenantId.method]: {
      summary: '条件查询员工，分页展示',
      method: 'get',
      apiPrefix: '/afc',
      url: (payload) => `/api/afc/employees`,
    },
    [EmployeeController.queryEmployeesInSafetyWhitelist.method]: {
      summary: '查询租户下水印白名单员工',
      method: 'get',
      apiPrefix: '/afc',
      url: (payload) => `/api/afc/employees/water-mark/employees`,
    },
    [EmployeeController.queryRolesInEmployee.method]: {
      summary: '根据员工ID查询员工角色',
      method: 'get',
      apiPrefix: '/afc',
      url: (payload) => `/api/afc/employees/${payload.employeeId}/roles`,
    },
    [EmployeeController.queryUsersInEmployee.method]: {
      summary: '根据员工ID查询用户信息',
      method: 'get',
      apiPrefix: '/afc',
      url: (payload) => `/api/afc/employees/${payload.employeeId}/users`,
    },
    [EmployeeController.update.method]: {
      summary: '修改员工信息',
      method: 'put',
      apiPrefix: '/afc',
      url: (payload) => `/api/afc/employees`,
    },
    [EmployeeController.updateSecretLevel.method]: {
      summary: '修改员工保密级别',
      method: 'put',
      apiPrefix: '/afc',
      url: (payload) => `/api/afc/employees/secret-level`,
    },
  },
}
