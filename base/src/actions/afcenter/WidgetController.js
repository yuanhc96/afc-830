// This file is automatically generated

// widget管理

import { WidgetController } from '@controller'
export default {
  actions: {
    [WidgetController.bindRoleWidgets.method]: {
      summary: 'widget绑定角色',
      method: 'post',
      apiPrefix: '/afc',
      url: (payload) => `/api/afc/widgets/${payload.id}/roles`,
    },
    [WidgetController.create.method]: {
      summary: '新增',
      method: 'post',
      apiPrefix: '/afc',
      url: (payload) => `/api/afc/widgets`,
    },
    [WidgetController.delete.method]: {
      summary: '删除(支持批量删除)',
      method: 'delete',
      apiPrefix: '/afc',
      url: (payload) => `/api/afc/widgets`,
    },
    [WidgetController.existenceByCode.method]: {
      summary: '校验code是否存在',
      method: 'get',
      apiPrefix: '/afc',
      url: (payload) => `/api/afc/widgets/exist`,
    },
    [WidgetController.getByCode.method]: {
      summary: '根据code or id查询',
      method: 'get',
      apiPrefix: '/afc',
      url: (payload) => `/api/afc/widgets/${payload.code}`,
    },
    [WidgetController.getCurrentWeather.method]: {
      summary: '获取当前天气API',
      method: 'get',
      apiPrefix: '/afc',
      url: (payload) => `/api/afc/widgets/weather`,
    },
    [WidgetController.queryByCurrentUser.method]: {
      summary: '获取当前登录用户的widgets',
      method: 'get',
      apiPrefix: '/afc',
      url: (payload) => `/api/afc/widgets/current`,
    },
    [WidgetController.queryRolesByWidgetIdWithPage.method]: {
      summary: '分页查询widget绑定的角色列表',
      method: 'get',
      apiPrefix: '/afc',
      url: (payload) => `/api/afc/widgets/${payload.id}/roles`,
    },
    [WidgetController.queryWithPage.method]: {
      summary: '分页条件查询列表',
      method: 'get',
      apiPrefix: '/afc',
      url: (payload) => `/api/afc/widgets`,
    },
    [WidgetController.unbindRoleWidgets.method]: {
      summary: 'widget解绑角色',
      method: 'delete',
      apiPrefix: '/afc',
      url: (payload) => `/api/afc/widgets/${payload.id}/roles`,
    },
    [WidgetController.update.method]: {
      summary: '修改',
      method: 'put',
      apiPrefix: '/afc',
      url: (payload) => `/api/afc/widgets`,
    },
    [WidgetController.updateContent.method]: {
      summary: '修改内容(暂时不用)',
      method: 'put',
      apiPrefix: '/afc',
      url: (payload) => `/api/afc/widgets/${payload.id}/content`,
    },
  },
}
