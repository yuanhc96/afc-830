// This file is automatically generated

// 应用管理

import { AppController } from '@controller'
export default {
  actions: {
    [AppController.countLowcodeResourceWithAppName.method]: {
      summary: '统计指定应用内各资源类型的数量',
      method: 'post',
      apiPrefix: '/afc',
      url: (payload) => `/api/afc/apps/actions/count-resources`,
    },
    [AppController.create.method]: {
      summary: '注册应用',
      method: 'post',
      apiPrefix: '/afc',
      url: (payload) => `/api/afc/apps`,
    },
    [AppController.deleteByIds.method]: {
      summary: '按主键集合删除(参数放body)',
      method: 'put',
      apiPrefix: '/afc',
      url: (payload) => `/api/afc/apps/bulk-delete`,
    },
    [AppController.findApp.method]: {
      summary: '根据id查询',
      method: 'get',
      apiPrefix: '/afc',
      url: (payload) => `/api/afc/apps/${payload.id}`,
    },
    [AppController.findAppByIdOrCode.method]: {
      summary: '根据id或code查询',
      method: 'get',
      apiPrefix: '/afc',
      url: (payload) => `/api/afc/apps/find-app`,
    },
    [AppController.isExist.method]: {
      summary: '校验code是否重复',
      method: 'get',
      apiPrefix: '/afc',
      url: (payload) => `/api/afc/apps/exist/${payload.code}/${payload.tenantId}`,
    },
    [AppController.queryAppsByCriteria.method]: {
      summary: '分页查询应用列表',
      method: 'get',
      apiPrefix: '/afc',
      url: (payload) => `/api/afc/apps`,
    },
    [AppController.queryModelsWithPage.method]: {
      summary: '分页查询数据模型',
      method: 'post',
      apiPrefix: '/afc',
      url: (payload) => `/api/afc/apps/${payload.appCode}/models/query-with-page`,
    },
    [AppController.queryPersistentEntitys.method]: {
      summary: '/查询应用内运行时持久化实体',
      method: 'get',
      apiPrefix: '/afc',
      url: (payload) => `/api/afc/apps/${payload.appCode}/persistent-entitys`,
    },
    [AppController.queryWidgetAppsByCriteria.method]: {
      summary: '分页查询widget应用列表',
      method: 'get',
      apiPrefix: '/afc',
      url: (payload) => `/api/afc/apps/widget/query/apps`,
    },
    [AppController.refreshSercet.method]: {
      summary: '刷新应用密钥',
      method: 'post',
      apiPrefix: '/afc',
      url: (payload) => `/api/afc/apps/${payload.id}/refresh/secret`,
    },
    [AppController.syncApplicationBiFolder.method]: {
      summary: '同步应用至iData平台',
      method: 'post',
      apiPrefix: '/afc',
      url: (payload) => `/api/afc/apps/${payload.appCode}/sync-app-folder`,
    },
    [AppController.update.method]: {
      summary: '修改应用-基础信息',
      method: 'put',
      apiPrefix: '/afc',
      url: (payload) => `/api/afc/apps`,
    },
  },
}
